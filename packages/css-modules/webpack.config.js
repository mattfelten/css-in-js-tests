const path = require("path");
const webpack = require("webpack");
const { CleanWebpackPlugin } = require("clean-webpack-plugin");

module.exports = {
	context: __dirname,
	mode: "development",
	entry: {
		app: "./src/Button.tsx"
	},
	output: {
		path: path.resolve(__dirname, "dist")
	},
	resolve: {
		extensions: [".js", ".jsx", ".ts", ".tsx"]
	},
	module: {
		rules: [
			{
				test: /\.(ts|tsx)$/,
				loader: "ts-loader",
				options: {
					transpileOnly: true
				}
			},
			{
				test: /\.s[ac]ss$/i,
				use: [
					// Creates `style` nodes from JS strings in dev and extract it to
					// another file in production
					"style-loader",
					{
						loader: "@teamsupercell/typings-for-css-modules-loader",
						options: {
							banner: "// autogenerated by typings-for-css-modules-loader."
						}
					},
					// Translates CSS into CommonJS with modules
					{
						loader: "css-loader",
						options: {
							modules: {
								mode: "local",
								localIdentName: '[local]--[hash:base64:6]',
							},
							localsConvention: "camelCase"
						}
					},
					// Compiles Sass to CSS
					"sass-loader"
				]
			}
		]
	},
	optimization: {
		splitChunks: {
			chunks: "all"
		}
	},
	plugins: [
		new webpack.WatchIgnorePlugin([/s[ac]ss\.d\.ts$/]),
		new CleanWebpackPlugin(),
	].filter(Boolean)
};
